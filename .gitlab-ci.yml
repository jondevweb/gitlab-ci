stages:
 - docker_build
 - build_maven
 - test 

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_USERNAME: $DOCKER_USERNAME 
  DOCKER_PASSWORD: $DOCKER_PASSWORD
  DOCKER_REGISTRY: jondevweb/dockerintegrationtest

docker_build_job:
  stage: docker_build
  image: docker:latest
  services:
    - docker:dind
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker build --no-cache -t $DOCKER_REGISTRY -f docker/Dockerfile.test .
    - docker push $DOCKER_REGISTRY

cache:
  paths:
    - .m2/repository
  key: "$CI_JOB_NAME"

maven_build_job:
  stage: build_maven
  image: $DOCKER_REGISTRY
  variables: 
    DOCKER_HOST: tcp://docker:2375
  services:
    - docker:dind
  before_script:
    - apt-get update && apt-get install -y docker-compose
  script:
    - docker-compose up -d --build
    - ./mvnw clean package -DskipTests=true
      -Dhttps.protocols=TLSv1.2
      -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
      -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
      -Dorg.slf4j.simpleLogger.showDateTime=true
      -Djava.awt.headless=true
      --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true
  dependencies:
   - docker_build_job
  artifacts:
    paths:
      - spring-petclinic-admin-server/target/*.jar

test_build_job:
  stage: test
  script:
    - ./mvnw test
      -Dhttps.protocols=TLSv1.2
      -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
      -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
      -Dorg.slf4j.simpleLogger.showDateTime=true
      -Djava.awt.headless=true
      --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true
  image: eclipse-temurin:17-alpine
  dependencies:
    - maven_build_job

test_integration:
  stage: test
  image: $DOCKER_REGISTRY
  variables: 
    DOCKER_HOST: tcp://docker:2375
  services:
    - docker:dind
  before_script:
    - apt-get update && apt-get install -y docker-compose
  script:
    - docker-compose up --build test_integration
  dependencies:
    - maven_build_job

test_admin:
  stage: test
  image: $DOCKER_REGISTRY
  variables: 
    DOCKER_HOST: tcp://docker:2375
  services:
    - docker:dind
  before_script:
    - apt-get update && apt-get install -y docker-compose
  script:
    - docker-compose up --build test_admin
  dependencies:
    - maven_build_job

test_customer:
  stage: test
  image: $DOCKER_REGISTRY
  variables: 
    DOCKER_HOST: tcp://docker:2375
  services:
    - docker:dind
  before_script:
    - apt-get update && apt-get install -y docker-compose
  script:
    - docker-compose up --build test_customer
  dependencies:
    - maven_build_job